{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior-plus.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/Header.module.css"],"names":["module","exports","Header","className","s","navigation","navlink","to","activeClassName","active","Error404","Junior","JuniorPlus","HW1","Affair","props","affair","name","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","alert","setChecked","column","blue","disabled","PreJunior","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7771009c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1R94w\",\"errorInput\":\"SuperInputText_errorInput__2w1Tv\",\"error\":\"SuperInputText_error__2kmnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1_q0x\",\"red\":\"SuperButton_red__3KgKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3KLz5\",\"column\":\"HW4_column__1Cpm3\",\"testSpanError\":\"HW4_testSpanError__3lTeD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2jzwn\",\"spanClassName\":\"SuperCheckbox_spanClassName__2ZJsc\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Header.module.css\";\n\nfunction Header() {\n    return (\n        <div className={s.navigation}>\n            <div className={s.navlink}>\n                <NavLink to=\"/pre-junior\" activeClassName={s.active}>\n                    {\" \"}\n                    pre-junior\n                </NavLink>\n            </div>\n            <div className={s.navlink}>\n                <NavLink to=\"/junior\" activeClassName={s.active}>\n                    {\" \"}\n                    junior\n                </NavLink>\n            </div>\n            <div className={s.navlink}>\n                <NavLink to=\"/junior-plus\" activeClassName={s.active}>\n                    junior plus\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from \"react\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\nimport HW12 from \"../../h12/HW12\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\n\r\nexport function Junior() {\r\n    return (\r\n        <div>\r\n            {/* <HW7 />\r\n            <HW8 />\r\n            <HW9 />\r\n            <HW10 />\r\n            <HW11 />\r\n            <HW12 /> */}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <div>Hello, keep going to space</div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            {/*<Message*/}\n            {/*    avatar={messageData.avatar}*/}\n            {/*    name={messageData.name}*/}\n            {/*    message={messageData.message}*/}\n            {/*    time={messageData.time}*/}\n            {/*/>*/}\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from \"react\";\nimport { AffairType } from \"./HW2\";\n\ntype AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType; // need to fix any\n  deleteAffairCallback: (_id: number) => void; // need to fix any\n};\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id);\n  }; // need to fix\n\n  return (\n    <div>\n      {props.affair.name}\n\n      <button onClick={deleteCallback}>X</button>\n    </div>\n  );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport { AffairType, FilterType } from \"./HW2\";\n\ntype AffairsPropsType = {\n  // need to fix any\n  data: Array<AffairType>;\n  setFilter: (filter: FilterType) => void;\n  deleteAffairCallback: (_id: number) => void;\n};\n\nfunction Affairs(props: AffairsPropsType) {\n  const mappedAffairs = props.data.map((a: AffairType) => (\n    <Affair // should work\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n      affair={a}\n      deleteAffairCallback={props.deleteAffairCallback}\n    />\n  ));\n\n  const setAll = () => {\n    props.setFilter(\"all\");\n  }; // need to fix\n  const setHigh = () => {\n    props.setFilter(\"high\");\n  };\n  const setMiddle = () => {\n    props.setFilter(\"middle\");\n  };\n  const setLow = () => {\n    props.setFilter(\"low\");\n  };\n\n  return (\n    <div>\n      {mappedAffairs}\n\n      <button onClick={setAll}>All</button>\n      <button onClick={setHigh}>High</button>\n      <button onClick={setMiddle}>Middle</button>\n      <button onClick={setLow}>Low</button>\n    </div>\n  );\n}\n\nexport default Affairs;\n","import React, { useState } from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"low\" | \"high\" | \"middle\";\nexport type AffairType = {\n  priority: AffairPriorityType;\n  _id: number;\n  name: string;\n};\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n  { _id: 1, name: \"React\", priority: \"high\" },\n  { _id: 2, name: \"anime\", priority: \"low\" },\n  { _id: 3, name: \"games\", priority: \"low\" },\n  { _id: 4, name: \"work\", priority: \"high\" },\n  { _id: 5, name: \"html & css\", priority: \"middle\" },\n];\n\n// pure helper functions\nexport const filterAffairs = (\n  affairs: Array<AffairType>,\n  filter: FilterType\n): Array<AffairType> => {\n  if (filter === \"all\") return affairs;\n  //   if (filter === \"low\") return affairs.filter(a => a.priority === \"low\")\n  //   if (filter === \"middle\") return affairs.filter(a => a.priority === \"middle\")\n  //   if (filter === \"high\") return affairs.filter(a => a.priority === \"high\")\n  else return affairs.filter((a) => a.priority === filter);\n};\nexport const deleteAffair = (\n  affairs: Array<AffairType>,\n  _id: number\n): Array<AffairType> => {\n  return affairs.filter((a) => a._id !== _id);\n};\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n  const [filter, setFilter] = useState<FilterType>(\"all\");\n\n  const filteredAffairs = filterAffairs(affairs, filter);\n  const deleteAffairCallback = (_id: number) =>\n    setAffairs(deleteAffair(affairs, _id));\n\n  return (\n    <div>\n      <hr />\n      homeworks 2{/*should work (должно работать)*/}\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n      <hr />\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeAffairs/>*/}\n      <hr />\n    </div>\n  );\n}\n\nexport default HW2;\n","import React, {\n    ChangeEvent,\n    DetailedHTMLProps,\n    InputHTMLAttributes,\n    KeyboardEvent,\n} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n    InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void;\n    onEnter?: () => void;\n    error?: string;\n    spanClassName?: string;\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange,\n    onChangeText,\n    onKeyPress,\n    onEnter,\n    error,\n    className,\n    spanClassName,\n\n    ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && // если есть пропс onChange\n            onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    };\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter && // если есть пропс onEnter\n            e.key === \"Enter\" && // и если нажата кнопка Enter\n            onEnter(); // то вызвать его\n    };\n\n    const finalSpanClassName = `${s.error} ${\n        spanClassName ? spanClassName : \"\"\n    }`;\n\n    const finalInputClassName = `${s.input} ${\n        error ? s.errorInput : s.superInput\n    } ${className}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n};\n\nexport default SuperInputText;\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<\n    ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean;\n};\n\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\n    red,\n    className,\n    ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n}) => {\n    const finalClassName = `${s.button} ${\n        red ? s.red : s.default\n    } ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n};\n\nexport default SuperButton;\n","import React, {\n    ChangeEvent,\n    DetailedHTMLProps,\n    InputHTMLAttributes,\n} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n    InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void;\n    spanClassName?: string;\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange,\n    onChangeChecked,\n    className,\n    spanClassName,\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n    ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked); // сделайте так чтоб работал onChange и onChangeChecked\n    };\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n};\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1 />\n            <HW2 />\n            {/* <HW3/> */}\n            <HW4 />\n            {/*<HW6/>*/}\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Error404 from \"./pages/Error404\";\nimport { Junior } from \"./pages/Junior\";\nimport { JuniorPlus } from \"./pages/Junior-plus\";\nimport PreJunior from \"./pages/PreJunior\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\",\n};\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/* exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route\n                    path={\"/\"}\n                    exact\n                    render={() => <Redirect to={PATH.PRE_JUNIOR} />}\n                />\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />} />\n                <Route path={PATH.JUNIOR} render={() => <Junior />} />\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus />} />\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404 />} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/* в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header />\n\n                <Routes />\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW5 />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Header_navigation__37SIu\",\"navlink\":\"Header_navlink__1XN7H\",\"active\":\"Header_active__RYuQN\"};"],"sourceRoot":""}