{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h6/hw6.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior-plus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/Header.module.css"],"names":["module","exports","Header","className","s","navigation","navlink","to","activeClassName","active","Error404","SuperSelect","options","onChange","onChangeOption","restProps","mappedOptions","e","SuperRadio","type","name","value","map","o","i","arr","HW7","useState","Junior","JuniorPlus","Message","props","m","bg","avatar","src","alt","message","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","key","style","marginLeft","setFilter","defaultAffairs","priority","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","cntr","inp","btn","nmb","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","trimmedName","trim","alert","HW3","setUsers","newUser","v1","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","children","onDoubleClick","restSpanProps","editableSpan","width","height","cx","cy","r","stroke","stroke-width","SuperButton","red","finalClassName","button","default","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8e2b2189.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__1mGMD\",\"cntr\":\"Greeting_cntr__1hADC\",\"inp\":\"Greeting_inp__3rf85\",\"btn\":\"Greeting_btn__1Bvyg\",\"nmb\":\"Greeting_nmb__1BUzp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"hw6_editableSpan__W9XST\",\"button\":\"hw6_button__CgMDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1R94w\",\"errorInput\":\"SuperInputText_errorInput__2w1Tv\",\"error\":\"SuperInputText_error__2kmnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3PdPM\",\"bg\":\"Message_bg__1_CoA\",\"avatar\":\"Message_avatar__1rhm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1_q0x\",\"red\":\"SuperButton_red__3KgKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2aHIn\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Header.module.css\";\n\nfunction Header() {\n    return (\n        <div className={s.navigation}>\n            <div className={s.navlink}>\n                <NavLink to=\"/pre-junior\" activeClassName={s.active}>\n                    {\" \"}\n                    pre-junior\n                </NavLink>\n            </div>\n            <div className={s.navlink}>\n                <NavLink to=\"/junior\" activeClassName={s.active}>\n                    {\" \"}\n                    junior\n                </NavLink>\n            </div>\n            <div className={s.navlink}>\n                <NavLink to=\"/junior-plus\" activeClassName={s.active}>\n                    junior plus\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import React from \"react\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\nimport HW12 from \"../../h12/HW12\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\n\r\nexport function Junior() {\r\n    return (\r\n        <div>\r\n            <HW7 />\r\n            {/* <HW8 />\r\n            <HW9 />\r\n            <HW10 />\r\n            <HW11 />\r\n            <HW12 /> */}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <div>Hello, keep going to space</div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport m from \"./Message.module.css\";\n\ntype messageDataType = {\n  avatar: string;\n  name: string;\n  message: string;\n  time: string;\n};\n\nfunction Message(props: messageDataType) {\n  return (\n    <div className={m.bg}>\n      <div>\n        <img className={m.avatar} src={props.avatar} alt=\"img\" />\n      </div>\n      <div className={m.message}>\n        <h1> {props.name} </h1>\n        <p> {props.message}</p>\n        <span> {props.time}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Nikita Skachkov\",\n    message: \"Hello, my friend\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr />\n            homeworks 1{/* { should work (должно работать)} */}\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport { AffairType } from \"./HW2\";\n\ntype AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType; // need to fix any\n  deleteAffairCallback: (_id: number) => void; // need to fix any\n};\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id);\n  }; // need to fix\n\n  return (\n    <div>\n      {props.affair.name}\n\n      <button onClick={deleteCallback}>X</button>\n    </div>\n  );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport { AffairType, FilterType } from \"./HW2\";\n\ntype AffairsPropsType = {\n    // need to fix any\n    data: Array<AffairType>;\n    setFilter: (filter: FilterType) => void;\n    deleteAffairCallback: (_id: number) => void;\n};\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ));\n\n    const setAll = () => {\n        props.setFilter(\"all\");\n    }; // need to fix\n    const setHigh = () => {\n        props.setFilter(\"high\");\n    };\n    const setMiddle = () => {\n        props.setFilter(\"middle\");\n    };\n    const setLow = () => {\n        props.setFilter(\"low\");\n    };\n\n    return (\n        <div style={{ marginLeft: \"20px\" }}>\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, { useState } from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"low\" | \"high\" | \"middle\";\nexport type AffairType = {\n    priority: AffairPriorityType;\n    _id: number;\n    name: string;\n};\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    { _id: 1, name: \"React\", priority: \"high\" },\n    { _id: 2, name: \"anime\", priority: \"low\" },\n    { _id: 3, name: \"games\", priority: \"low\" },\n    { _id: 4, name: \"work\", priority: \"high\" },\n    { _id: 5, name: \"html & css\", priority: \"middle\" },\n];\n\n// pure helper functions\nexport const filterAffairs = (\n    affairs: Array<AffairType>,\n    filter: FilterType\n): Array<AffairType> => {\n    if (filter === \"all\") return affairs;\n    //   if (filter === \"low\") return affairs.filter(a => a.priority === \"low\")\n    //   if (filter === \"middle\") return affairs.filter(a => a.priority === \"middle\")\n    //   if (filter === \"high\") return affairs.filter(a => a.priority === \"high\")\n    else return affairs.filter((a) => a.priority === filter);\n};\nexport const deleteAffair = (\n    affairs: Array<AffairType>,\n    _id: number\n): Array<AffairType> => {\n    return affairs.filter((a) => a._id !== _id);\n};\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) =>\n        setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div>\n            <hr />\n            homeworks 2{/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, { ChangeEvent } from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string;\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void;\n    addUser: () => void;\n    error: string | null;\n    totalUsers: number;\n};\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers } // деструктуризация пропсов\n) => {\n    const inputClass = s.error; // need to fix with (?:)\n\n    return (\n        <div className={s.cntr}>\n            <input value={name} onChange={setNameCallback} className={s.inp} />\n            <span>{error}</span>\n            <button onClick={addUser} className={s.btn}>\n                ADD\n            </button>\n            <span className={s.nmb}>{totalUsers}</span>\n        </div>\n    );\n};\n\nexport default Greeting;\n","import React, { ChangeEvent, useState } from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>;\n    addUserCallback: (name: string) => void;\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({\n    users,\n    addUserCallback,\n}) => {\n    // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string | null>(null);\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value);\n        setError(null);\n    };\n\n    const addUser = () => {\n        const trimmedName = name.trim();\n        if (trimmedName) {\n            addUserCallback(trimmedName);\n            alert(`Hello ${name} !`);\n        } else {\n            alert(\"Title is requared\");\n        }\n        setName(\"\");\n    };\n\n    const totalUsers = users.length;\n\n    return (\n        <div style={{ marginLeft: \"20px\" }}>\n            <Greeting\n                name={name}\n                setNameCallback={setNameCallback}\n                addUser={addUser}\n                error={error}\n                totalUsers={totalUsers}\n            />\n        </div>\n    );\n};\n\nexport default GreetingContainer;\n","import React, { useState } from \"react\";\nimport { v1 } from \"uuid\";\n\nimport GreetingContainer from \"./GreetingContainer\";\n\n// types\nexport type UserType = {\n    _id: string;\n    name: string;\n};\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]);\n\n    const addUserCallback = (name: string) => {\n        const newUser = {\n            _id: v1(),\n            name,\n        };\n        setUsers([...users, newUser]);\n    };\n\n    return (\n        <div>\n            <hr />\n            homeworks 3{/*should work (должно работать)*/}\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback}\n            />\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {\n    ChangeEvent,\n    DetailedHTMLProps,\n    InputHTMLAttributes,\n    KeyboardEvent,\n} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n    InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void;\n    onEnter?: () => void;\n    error?: string;\n    spanClassName?: string;\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange,\n    onChangeText,\n    onKeyPress,\n    onEnter,\n    error,\n    className,\n    spanClassName,\n\n    ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && // если есть пропс onChange\n            onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    };\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter && // если есть пропс onEnter\n            e.key === \"Enter\" && // и если нажата кнопка Enter\n            onEnter(); // то вызвать его\n    };\n\n    const finalSpanClassName = `${s.error} ${\n        spanClassName ? spanClassName : \"\"\n    }`;\n\n    const finalInputClassName = `${s.input} ${\n        error ? s.errorInput : s.superInput\n    } ${className}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n};\n\nexport default SuperInputText;\n","import React, {\n    DetailedHTMLProps,\n    InputHTMLAttributes,\n    HTMLAttributes,\n    useState,\n} from \"react\";\nimport s from \"../../hw6.module.css\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n    InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<\n    HTMLAttributes<HTMLSpanElement>,\n    HTMLSpanElement\n>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void;\n    onEnter?: () => void;\n    error?: string;\n    spanClassName?: string;\n\n    spanProps?: DefaultSpanPropsType; // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = ({\n    autoFocus, // игнорировать изменение этого пропса\n    onBlur,\n    onEnter,\n    spanProps,\n\n    ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const { children, onDoubleClick, className, ...restSpanProps } =\n        spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (\n        e: React.MouseEvent<HTMLSpanElement, MouseEvent>\n    ) => {\n        setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    return (\n        <>\n            {editMode ? (\n                <SuperInputText\n                    autoFocus // пропсу с булевым значением не обязательно указывать true\n                    onBlur={onBlurCallback}\n                    onEnter={onEnterCallback}\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                />\n            ) : (\n                <>\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={s.editableSpan}\n                        {...restSpanProps}\n                    >\n                        <svg width=\"30\" height=\"30\">\n                            <circle\n                                cx=\"15\"\n                                cy=\"17\"\n                                r=\"3\"\n                                stroke=\"black\"\n                                stroke-width=\"1\"\n                            />\n                        </svg>\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default SuperEditableSpan;\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<\n    ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean;\n};\n\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\n    red,\n    className,\n    ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n}) => {\n    const finalClassName = `${s.button} ${\n        red ? s.red : s.default\n    } ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n};\n\nexport default SuperButton;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, { useState } from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport { restoreState, saveState } from \"./localStorage/localStorage\";\nimport s from \"./hw6.module.css\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        setValue(restoreState<string>(\"editable-span-value\", \"\"));\n    };\n\n    return (\n        <div>\n            <hr />\n            homeworks 6{/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{\n                        children: value ? undefined : \"enter text...\",\n                    }}\n                />\n            </div>\n            <SuperButton onClick={save} className={s.button}>\n                save\n            </SuperButton>\n            <SuperButton onClick={restore} className={s.button}>\n                restore\n            </SuperButton>\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr />\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\n\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1 />\n            <HW2 />\n            <HW3 />\n            {/* <HW4 /> */}\n            <HW6 />\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Error404 from \"./pages/Error404\";\nimport { Junior } from \"./pages/Junior\";\nimport { JuniorPlus } from \"./pages/Junior-plus\";\nimport PreJunior from \"./pages/PreJunior\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\",\n};\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/* exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route\n                    path={\"/\"}\n                    exact\n                    render={() => <Redirect to={PATH.PRE_JUNIOR} />}\n                />\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />} />\n                <Route path={PATH.JUNIOR} render={() => <Junior />} />\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus />} />\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404 />} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/* в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header />\n\n                <Routes />\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW5 />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Header_navigation__37SIu\",\"navlink\":\"Header_navlink__1XN7H\",\"active\":\"Header_active__RYuQN\"};"],"sourceRoot":""}